///////////////////////////////////////////////////////////////////////
//
// This file is part of the ImageWalker code base.
// For more information on ImageWalker see www.ImageWalker.com
//
// Copyright (C) 1998-2001 Zac Walker.  All rights reserved.
//
///////////////////////////////////////////////////////////////////////
//
// ImageWalkerViewer.idl : IDL source for ImageWalkerViewer.exe
//
// This file will be processed by the MIDL tool to
// produce the type library (ImageWalkerViewer.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "urlmon.idl";

[
	uuid(202B2A5E-A0D5-4899-BB9F-DC4141CD5C83),
	version(1.0),
	helpstring("ImageWalkerViewer 2.0 Type Library")
]
library ImageWalkerViewerLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		object,
		uuid(DB50584F-9FD5-4050-A022-2A3CBB03DC52),
		dual,
		helpstring("CImageWalker Interface"),
		pointer_default(unique),
		oleautomation

	] 
	interface IImageWalker : IDispatch
	{
		[id(1), helpstring("method OpenFolder")] HRESULT OpenFolder([in] BSTR strFolderName);
		[id(2), helpstring("method ShowFullScreen")] HRESULT ShowFullScreen([in] BSTR strFolderName);
		[id(3), helpstring("method SlideShow")] HRESULT SlideShow([in] BSTR strFolderName);
	}; 

	[
		object,
		uuid(AB71D78F-EBC0-4C87-B460-E0047FAD5BEE),
		dual,
		nonextensible,
		helpstring("IMainTestDriver Interface"),
		pointer_default(unique)
	]
	interface IMainTestDriver : IDispatch
	{
		[id(1), helpstring("method ExecCommand")] HRESULT ExecCommand([in] BSTR strCommand);		
		[propget, id(2), helpstring("property FolderPath")] HRESULT FolderPath([out, retval] BSTR* pVal);		
		[propput, id(2), helpstring("property FolderPath")] HRESULT FolderPath([in] BSTR newVal);
		[id(3), helpstring("method Select")] HRESULT Select([in] BSTR strItem);
		[propget, id(4), helpstring("property ItemCount")] HRESULT ItemCount([out, retval] long* pVal);
		[id(5), helpstring("method TextSearch")] HRESULT TextSearch([in] BSTR str);
		[id(6), helpstring("method RefreshFolder")] HRESULT RefreshFolder();		
		[id(7), helpstring("method WaitForIdle")] HRESULT WaitForIdle();
		[propget, id(8), helpstring("property ImageFileName")] HRESULT ImageFileName([out, retval] BSTR* pVal);
	};

	[
		object,
		uuid(447BB55E-3F1A-449D-9EE5-33A7C9E9EC4B),
		dual,
		nonextensible,
		helpstring("IPlugProtocol Interface"),
		pointer_default(unique)
	]
	interface IPlugProtocol : IDispatch
	{ 
	};


	[
		uuid(D7E8384A-752B-447d-8D30-14A1A79FB210),
		helpstring("ImageWalker Class")
	]
	coclass ImageWalker
	{
		[default] interface IImageWalker;
	};

	[
		uuid(1CD50F0B-C67D-4b01-A707-55573DACAADF),
		helpstring("ImageWalker PlugProtocol Class")
	]
	coclass PlugProtocol
	{
		[default] interface IPlugProtocol;
		interface IInternetProtocol;
	};

	[
		uuid(325031AB-BFF0-4026-AF1D-3386F8BBFDBB),
		helpstring("MainTestDriver Class")
	]
	coclass MainTestDriver
	{
		[default] interface IMainTestDriver;
	};
};
